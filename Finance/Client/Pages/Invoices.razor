@page "/"
@layout EmptyLayout

@*<GeneralComponents.Components.InvoiceComponent.Invoice></GeneralComponents.Components.InvoiceComponent.Invoice>*@
@using System.Net.Http.Json
@using Domain.Model.Accounting
@inject HttpClient httpClient

<MudTable Items="@Elements" Dense="@dense" Hover="@hover" Bordered="@bordered" Striped="@striped" Filter="new Func<Invoice,bool>(FilterFunc1)" @bind-SelectedItem="selectedItem1">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Periodic Elements</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Nr</MudTh>
        <MudTh>Sign</MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Position</MudTh>
        <MudTh>Molar mass</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Nr">@context.InvoiceNumber</MudTd>
        <MudTd DataLabel="Sign">@context.InvoiceNumber</MudTd>
        <MudTd DataLabel="Name">@context.InvoiceNumber</MudTd>
        <MudTd DataLabel="Position">@context.InvoiceNumber</MudTd>
        <MudTd DataLabel="Molar mass">@context.InvoiceNumber</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

<div class="d-flex flex-wrap mt-4">
    <MudSwitch @bind-Checked="@hover" Color="Color.Primary">Hover</MudSwitch>
    <MudSwitch @bind-Checked="@dense" Color="Color.Secondary">Dense</MudSwitch>
    <MudSwitch @bind-Checked="@striped" Color="Color.Tertiary">Striped</MudSwitch>
    <MudSwitch @bind-Checked="@bordered" Color="Color.Warning">Bordered</MudSwitch>
    <MudSpacer />
    <div style="min-width:200px;">
        <MudText Inline="true" Class="align-self-center">Selected1: @selectedItem1?.InvoiceNumber</MudText>
        <MudText Inline="true" Class="align-self-center">Selected2: @selectedItem2?.InvoiceNumber</MudText>
    </div>
</div>

@code {
    private bool dense = false;
    private bool hover = true;
    private bool striped = false;
    private bool bordered = false;
    private string searchString1 = "";
    private string searchString2 = "";
    private Invoice selectedItem1 = null;
    private Invoice selectedItem2 = null;
    private HashSet<Invoice> selectedItems = new HashSet<Invoice>();

    private IEnumerable<Invoice> Elements = new List<Invoice>();



    private bool FilterFunc1(Invoice element) => FilterFunc(element, searchString1);
    private bool FilterFunc2(Invoice element) => FilterFunc(element, searchString2);

    private bool FilterFunc(Invoice element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.InvoiceNumber.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        return false;
    }
}

